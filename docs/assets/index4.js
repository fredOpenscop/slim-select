import{d as u,S as i,_ as r,o as n,c as a,a as e,f as l,t as $,j as g,e as w,r as c,b as d,w as M}from"./index.js";const C=u({name:"Destroy",data(){return{destroySingle:null,destroyMultiple:null}},mounted(){this.create()},methods:{create(){this.destroySingle=new i({select:this.$refs.destroySingle}),this.destroyMultiple=new i({select:this.$refs.destroyMultiple})},destroy(){this.destroySingle.destroy(),this.destroySingle=null,this.destroyMultiple.destroy(),this.destroyMultiple=null}}}),E={id:"destroy",class:"content"},O=e("h2",{class:"header"},"destroy",-1),k=e("p",null,"The destroy method will remove slim-select and display your original select.",-1),j={class:"row"},T={ref:"destroySingle"},G=e("option",{value:"value1"},"Value 1",-1),N=e("option",{value:"value2"},"Value 2",-1),B=e("option",{value:"value3"},"Value 3",-1),W=[G,N,B],I={ref:"destroyMultiple",multiple:""},A=e("option",{value:"value1"},"Value 1",-1),J=e("option",{value:"value2"},"Value 2",-1),P=e("option",{value:"value3"},"Value 3",-1),Y=[A,J,P],q=e("pre",null,[l("      "),e("code",{class:"language-javascript"},`
        var select = new SlimSelect({
          select: '#selectElement'
        })
        select.destroy()
      `),l(`
    `)],-1);function z(t,s,p,h,_,v){return n(),a("div",E,[O,k,e("div",j,[t.destroySingle?(n(),a("div",{key:1,class:"btn",onClick:s[1]||(s[1]=(...o)=>t.destroy&&t.destroy(...o))},"Destroy")):(n(),a("div",{key:0,class:"btn",onClick:s[0]||(s[0]=(...o)=>t.create&&t.create(...o))},"Create")),e("select",T,W,512),e("select",I,Y,512)]),q])}const F=r(C,[["render",z]]),H=u({name:"EnableDisable",data(){return{setEnableSingle:null,setEnableMultiple:null}},mounted(){this.setEnableSingle=new i({select:this.$refs.setEnableSingle}),this.setEnableMultiple=new i({select:this.$refs.setEnableMultiple})},methods:{setEnable(){this.setEnableSingle.enable(),this.setEnableMultiple.enable()},setDisable(){this.setEnableSingle.disable(),this.setEnableMultiple.disable()}}}),K={id:"enableDisable",class:"content"},L=e("h2",{class:"header"},"enable / disable",-1),Q=e("p",null,[l(" These methods will enable or disable the select dropdown. "),e("br"),l(" You may also set disabled on your original select and slim-select will pick that up. ")],-1),R={class:"row"},U={ref:"setEnableSingle",disabled:""},X=e("option",{value:"value1"},"Value 1",-1),Z=e("option",{value:"value2"},"Value 2",-1),x=e("option",{value:"value3"},"Value 3",-1),ee=[X,Z,x],te={ref:"setEnableMultiple",multiple:"",disabled:""},se=e("option",{value:"value1"},"Value 1",-1),le=e("option",{value:"value2"},"Value 2",-1),oe=e("option",{value:"value3"},"Value 3",-1),ne=[se,le,oe],ae=e("pre",null,[l("      "),e("code",{class:"language-javascript"},`
        var select = new SlimSelect({
          select: '#selectElement'
        })
        select.enable()
        // or
        select.disable()
      `),l(`
    `)],-1);function ie(t,s,p,h,_,v){return n(),a("div",K,[L,Q,e("div",R,[t.setEnableSingle&&t.setEnableSingle.settings.disabled?(n(),a("div",{key:0,class:"btn",onClick:s[0]||(s[0]=(...o)=>t.setEnable&&t.setEnable(...o))},"Enable")):(n(),a("div",{key:1,class:"btn",onClick:s[1]||(s[1]=(...o)=>t.setDisable&&t.setDisable(...o))},"Disable")),e("select",U,ee,512),e("select",te,ne,512)]),ae])}const ce=r(H,[["render",ie]]),de=u({name:"GetData",data(){return{getDataOptions:null,getDataOptionsValue:[],getDataOptgroups:null,getDataOptgroupsValue:[]}},mounted(){this.getDataOptions=new i({select:this.$refs.getDataOptions}),this.getDataOptgroups=new i({select:this.$refs.getDataOptgroups})},methods:{getData(){this.getDataOptionsValue=this.getDataOptions.getData(),this.getDataOptgroupsValue=this.getDataOptgroups.getData()}}}),ue={id:"getData",class:"content"},re=e("h2",{class:"header"},"getData",-1),pe=e("p",null,"The getData method will return an array of the full data set.",-1),he={class:"row"},_e={ref:"getDataOptions"},ve=e("option",{value:"value1"},"Value 1",-1),$e=e("option",{value:"value2"},"Value 2",-1),ge=e("option",{value:"value3"},"Value 3",-1),Se=[ve,$e,ge],me={key:0,class:"pad-t-m pad-b-m"},fe=e("b",null,"Option Data:",-1),be={ref:"getDataOptgroups",multiple:""},De=w('<optgroup label="Group 1"><option value="value1">Value 1</option><option value="value2">Value 2</option><option value="value3">Value 3</option></optgroup><optgroup label="Group 2"><option value="value4">Value 4</option><option value="value5">Value 5</option><option value="value6">Value 6</option></optgroup>',2),Ve=[De],ye={key:0,class:"pad-t-m pad-b-m"},we=e("b",null,"Optgroup Data:",-1),Me=e("pre",null,[l("      "),e("code",{class:"language-javascript"},`
        var select = new SlimSelect({
          select: '#selectElement'
        })
        var data = select.getData() // Will return an array of options and optgroups
        console.log(data)
      `),l(`
    `)],-1);function Ce(t,s,p,h,_,v){return n(),a("div",ue,[re,pe,e("div",he,[e("div",{class:"btn",onClick:s[0]||(s[0]=(...o)=>t.getData&&t.getData(...o))},"Get Data"),e("div",null,[e("select",_e,Se,512),t.getDataOptionsValue.length?(n(),a("div",me,[fe,l(" "+$(t.getDataOptionsValue),1)])):g("",!0)]),e("div",null,[e("select",be,Ve,512),t.getDataOptgroupsValue.length?(n(),a("div",ye,[we,l(" "+$(t.getDataOptgroupsValue),1)])):g("",!0)])]),Me])}const Ee=r(de,[["render",Ce]]),Oe=u({name:"GetSelected",data(){return{selectedSingle:null,selectedSingleValue:[],selectedMultiple:null,selectedMultipleValue:[]}},mounted(){this.selectedSingle=new i({select:this.$refs.selectedSingle}),this.selectedMultiple=new i({select:this.$refs.selectedMultiple})},methods:{getSelected(){this.selectedSingleValue=this.selectedSingle.getSelected(),this.selectedMultipleValue=this.selectedMultiple.getSelected()}}}),ke={id:"getSelected",class:"content"},je=e("h2",{class:"header"},"getSelected",-1),Te=e("p",null,"The getSelected method will return an array of the currently selected value strings.",-1),Ge=e("div",{class:"alert info"}," Whether or not its a single or multiple select, getSelected will always return an array. ",-1),Ne={class:"row"},Be={ref:"selectedSingle"},We=e("option",{value:"value1"},"Value 1",-1),Ie=e("option",{value:"value2"},"Value 2",-1),Ae=e("option",{value:"value3"},"Value 3",-1),Je=[We,Ie,Ae],Pe={key:0,class:"pad-t-m pad-b-m"},Ye=e("b",null,"Single Select Value:",-1),qe={ref:"selectedMultiple",multiple:""},ze=e("option",{value:"value1"},"Value 1",-1),Fe=e("option",{value:"value2",selected:""},"Value 2",-1),He=e("option",{value:"value3",selected:""},"Value 3",-1),Ke=[ze,Fe,He],Le={key:0,class:"pad-t-m pad-b-m"},Qe=e("b",null,"Multi Select Value:",-1),Re=e("pre",null,[l("      "),e("code",{class:"language-javascript"},`
        var select = new SlimSelect({
          select: '#selectElement'
        })
        var values = select.getSelected() // Will return an array of strings
        console.log(values)
      `),l(`
    `)],-1);function Ue(t,s,p,h,_,v){return n(),a("div",ke,[je,Te,Ge,e("div",Ne,[e("div",{class:"btn",onClick:s[0]||(s[0]=(...o)=>t.getSelected&&t.getSelected(...o))},"Get Selected"),e("div",null,[e("select",Be,Je,512),t.selectedSingleValue.length?(n(),a("div",Pe,[Ye,l(" "+$(t.selectedSingleValue),1)])):g("",!0)]),e("div",null,[e("select",qe,Ke,512),t.selectedMultipleValue.length?(n(),a("div",Le,[Qe,l(" "+$(t.selectedMultipleValue),1)])):g("",!0)])]),Re])}const Xe=r(Oe,[["render",Ue]]),Ze=u({name:"OpenClose",setup(){return{openCloseSingle:null,openCloseMultiple:null}},mounted(){this.openCloseSingle=new i({select:this.$refs.openCloseSingle}),this.openCloseMultiple=new i({select:this.$refs.openCloseMultiple})},methods:{toggleOpenClose(){this.openCloseSingle.settings.isOpen?(this.openCloseSingle.close(),this.openCloseMultiple.close()):(this.openCloseSingle.open(),this.openCloseMultiple.open())}}}),xe={id:"openClose",class:"content"},et=e("h2",{class:"header"},"open / close",-1),tt=e("p",null,"The open and close methods will do just that.",-1),st={class:"row"},lt={ref:"openCloseSingle"},ot=e("option",{value:"value1"},"Value 1",-1),nt=e("option",{value:"value2"},"Value 2",-1),at=e("option",{value:"value3"},"Value 3",-1),it=[ot,nt,at],ct={ref:"openCloseMultiple",multiple:""},dt=e("option",{value:"value1"},"Value 1",-1),ut=e("option",{value:"value2"},"Value 2",-1),rt=e("option",{value:"value3"},"Value 3",-1),pt=[dt,ut,rt],ht=e("pre",null,[l("      "),e("code",{class:"language-javascript"},`
        var select = new SlimSelect({
          select: '#selectElement',
        })
        select.open()
        // or
        select.close()
      `),l(`
    `)],-1);function _t(t,s,p,h,_,v){return n(),a("div",xe,[et,tt,e("div",st,[e("div",{class:"btn",onClick:s[0]||(s[0]=o=>t.toggleOpenClose())},"Open/Close"),e("select",lt,it,512),e("select",ct,pt,512)]),ht])}const vt=r(Ze,[["render",_t]]),$t=u({name:"Search",setup(){return{searchSingle:null,searchMultiple:null}},mounted(){this.searchSingle=new i({select:this.$refs.searchSingle}),this.searchMultiple=new i({select:this.$refs.searchMultiple})},methods:{setSearch(){this.searchSingle.open(),this.searchSingle.search("value 2"),this.searchMultiple.open(),this.searchMultiple.search("value 2")}}}),gt={id:"search",class:"content"},St=e("h2",{class:"header"},"search",-1),mt=e("p",null,"The search method will update the search input field and search the data against that value.",-1),ft={class:"row"},bt={ref:"searchSingle"},Dt=e("option",{value:"value1"},"Value 1",-1),Vt=e("option",{value:"value2"},"Value 2",-1),yt=e("option",{value:"value3"},"Value 3",-1),wt=[Dt,Vt,yt],Mt={ref:"searchMultiple",multiple:""},Ct=e("option",{value:"value1"},"Value 1",-1),Et=e("option",{value:"value2"},"Value 2",-1),Ot=e("option",{value:"value3"},"Value 3",-1),kt=[Ct,Et,Ot],jt=e("pre",null,[l("      "),e("code",{class:"language-javascript"},`
        var select = new SlimSelect({
          select: '#selectElement'
        })
        select.search('value')
      `),l(`
    `)],-1);function Tt(t,s,p,h,_,v){return n(),a("div",gt,[St,mt,e("div",ft,[e("div",{class:"btn",onClick:s[0]||(s[0]=o=>t.setSearch())},"Set Search"),e("select",bt,wt,512),e("select",Mt,kt,512)]),jt])}const Gt=r($t,[["render",Tt]]),Nt=u({name:"SetData",data(){return{setDataSingle:null,setDataMultiple:null}},mounted(){this.setDataSingle=new i({select:this.$refs.setDataSingle,events:{error:t=>{console.error(t)}}}),this.setDataMultiple=new i({select:this.$refs.setDataMultiple,events:{error:t=>{console.error(t)}}})},methods:{setData(){fetch("https://api.gofakeit.com/json",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({type:"array",rowcount:10,indent:!1,fields:[{name:"text",function:"generate",params:{str:"{firstname} {lastname}"}},{name:"selected",function:"bool"}]})}).then(t=>t.json()).then(t=>{this.setDataSingle.setData(t),this.setDataMultiple.setData(t)}).catch(t=>console.error(t))}}}),Bt={id:"setData",class:"content"},Wt=e("h2",{class:"header"},"setData",-1),It=e("p",null," The setData method can take in an array of objects. This will set the options of the original select and rerender slim select. ",-1),At=e("div",{class:"alert info"}," If you use a single select but an option is not selected it will select the first option. ",-1),Jt=e("div",{class:"alert info"}," If you use a single select but pass in data with multiple selected options, the first option will be selected. ",-1),Pt={class:"alert info"},Yt={class:"row"},qt={ref:"setDataSingle"},zt={ref:"setDataMultiple",multiple:""},Ft=e("pre",null,[l("      "),e("code",{class:"language-javascript"},`
        var select = new SlimSelect({
          select: '#selectElement'
        })

        // Array of objects
        select.setData([
          {text: 'Value 1', value: 'value1'},
          {text: 'Value 2', value: 'value2'},
          {
            label: 'Group 1',
            options: [
              {text: 'Value 3', value: 'value3'},
              {text: 'Value 4', value: 'value4'},
            ]
          }
        ])
      `),l(`
    `)],-1);function Ht(t,s,p,h,_,v){const o=c("router-link");return n(),a("div",Bt,[Wt,It,At,Jt,e("div",Pt,[l(" To get a better break down of possible data options see "),d(o,{to:"/data#types"},{default:M(()=>[l("data")]),_:1})]),e("div",Yt,[e("div",{class:"btn",onClick:s[0]||(s[0]=(...S)=>t.setData&&t.setData(...S))},"Set Data"),e("select",qt,null,512),e("select",zt,null,512)]),Ft])}const Kt=r(Nt,[["render",Ht]]),Lt=u({name:"SetSelected",data(){return{selectedSingle:null,selectedMultiple:null}},mounted(){this.selectedSingle=new i({select:this.$refs.selectedSingle}),this.selectedMultiple=new i({select:this.$refs.selectedMultiple})},methods:{setSelected(){this.selectedSingle.open(),this.selectedSingle.setSelected("value2"),this.selectedMultiple.open(),this.selectedMultiple.setSelected(["value1","value3"]),setTimeout(()=>{this.selectedSingle.close(),this.selectedMultiple.close()},1e3)}}}),Qt={id:"setSelected",class:"content"},Rt=e("h2",{class:"header"},"setSelected",-1),Ut=e("p",null,"The setSelected method will set the selected value(s) of the select.",-1),Xt=e("p",null,"setSelected will accept both string or array of strings.",-1),Zt=e("p",null,"setSelected also takes in a second optional boolean param in the event you dont want to trigger the afterChange callback",-1),xt={class:"row"},es={ref:"selectedSingle"},ts=e("option",{value:"value1"},"Value 1",-1),ss=e("option",{value:"value2"},"Value 2",-1),ls=e("option",{value:"value3"},"Value 3",-1),os=[ts,ss,ls],ns={ref:"selectedMultiple",multiple:""},as=e("option",{value:"value1"},"Value 1",-1),is=e("option",{value:"value2"},"Value 2",-1),cs=e("option",{value:"value3"},"Value 3",-1),ds=[as,is,cs],us=e("pre",null,[l("      "),e("code",{class:"language-javascript"},`
        var select = new SlimSelect({
          select: '#selectElement'
        })
        select.setSelected('value1' /* or */ ['value1', 'value3'])
        console.log(select.getSelected())

        // To not trigger the afterChange callback
        select.setSelected('value1', false)
      `),l(`
    `)],-1);function rs(t,s,p,h,_,v){return n(),a("div",Qt,[Rt,Ut,Xt,Zt,e("div",xt,[e("div",{class:"btn",onClick:s[0]||(s[0]=(...o)=>t.setSelected&&t.setSelected(...o))},"Set Selected"),e("select",es,os,512),e("select",ns,ds,512)]),us])}const ps=r(Lt,[["render",rs]]),hs=u({name:"Methods",components:{GetSelected:Xe,SetSelected:ps,GetData:Ee,SetData:Kt,EnableDisable:ce,OpenClose:vt,Search:Gt,Destroy:F}}),_s={id:"methods",class:"contents"};function vs(t,s,p,h,_,v){const o=c("GetSelected"),S=c("SetSelected"),m=c("GetData"),f=c("SetData"),b=c("EnableDisable"),D=c("OpenClose"),V=c("Search"),y=c("Destroy");return n(),a("div",_s,[d(o),d(S),d(m),d(f),d(b),d(D),d(V),d(y)])}const gs=r(hs,[["render",vs]]);export{gs as default};
